---
layout: post
title:  "初衷"
date:   2019-03-29 15:03:00 +0800
categories: start
---
# 初衷
> 开始的开始吧，先作一个自我总结。要开始经营自己的兴趣，就先作一个自己的库存盘点吧，哈哈！
## 基础知识储备

### 语言基础
- **Java-**
算是使用最久也最熟悉的语言了吧。从开始的在学校学习JSP网站建设，实习期在外包公司做网站后台，再到工作中SWT桌面软件，最后自学了使用Java语言的Android应用开发，并且成功找到了Android开发的岗位，经过了两款APP的开发。到如今，又在工作之余研究了JavaFX的开发等等。虽然不能说学习有多深入，但是基础知识熟练度绝对不差了。
- **kotlin-**
目前最喜欢的编程语言。开始，因为Android官方宣布使用kotlin作为第一支持语言，作为一名Android开发者（自封），当然要紧跟Google的步伐咯。于16年接触学习了这门据说是现代版的java语言。结果一发不可收拾，语言的简洁性、一些方便的语法糖（好吧，我承认就是觉得可以少敲代码或者cool）、和java的高度兼容性等特点让我一下子喜新厌旧了。使用kotlin开发出了几款Android应用Demo玩了玩，然后又使用KotlinFX、TornadoFX等做了一些桌面小工具。目前乐此不疲使用中。但是没有专门学习过Kotlin语言，都是在用Java思路开发Kotlin应用。而且属于用到了才去查API，其实Kotlin语言基础还是比较薄弱的。
- **Android-**
假设Android算是一门语言吧。开始的适合，学习了四大组件开发、UI简单设计等方面知识，就自信满满，还真让我蒙着了一家小公司，成为了一名Android开发（公司唯一的一个），然后使用了浑身解数、历时两个月，先后为公司做出了公司网站配套的信息查询APP、对图像中的物体数量自动计数App（和公司C开发合作完成的，核心数数代码是他完成，我只是做了APP中图像处理、JNI调用等工作）。然后由于各方面原因，离职到了现在所在事业单位，每天修电脑为生！工作之余，先后研究了MVP架构、各种流行的第三方库（比如Rxjava、Dragger2、Retrofit、Glide、zxing、Butterknife等等）、Material设计规范等，但是这些均是处于能够基础使用，并未深入理解其设计理念、高级使用（给自己找的借口是，没有实际生产环境，没有那么复杂的业务需求）。后来在玩demo过程中，发现自己对于基础知识、底层知识还是比较薄弱，然后又根据一些教程，仔细研究了View绘制、自定义View等，也了解过Android系统底层架构、App启动原理、Android开发中Style、Theme等的基础使用等。后来又跟随Google发布的Android的一些新组件，比如Jetpack组件中的Navigation（用的最多）、Room、AndroidKTX（官方文档缺乏，只试过几个功能点）等等。Android语言来说的话，目前我的状态是所学碎片化严重，并且都是浅尝即止，缺乏深度和系统性。

Android发展速度还是比较快的，官方的版本更新速度以及版本变化都让我这业余爱好者忙于追赶了。但是，应该是因为自己都是在以兴趣爱好为基础，业余学习着Android知识来当娱乐吧（其实是对自己要求低、懒惰等因素），所以对于App的完成度、质量等一系列都处于一个基本没有要求的状态，所以烂尾App一大把，没有一款自己满意的。基本到了开发不下去的难点，就会找各方面原因，而没有坚持攻克难点，反而不断在起步阶段徘徊。而且随着时间推移，基础知识诸如算法、数据结构、设计模式、数据库等一系列东西越来越陌生（因为从来不用）。感觉开了无数个头，但是均未走下去。反而头开的越来越不好。
